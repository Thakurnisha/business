<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="9" total="19" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-28T15:35:16 IST" name="Suite" finished-at="2021-12-28T16:16:16 IST" duration-ms="2459461">
    <groups>
    </groups>
    <test started-at="2021-12-28T15:35:16 IST" name="MangoApps" finished-at="2021-12-28T16:16:16 IST" duration-ms="2459461">
      <class name="tests.CreateProjectTemplateTest">
        <test-method is-config="true" signature="beforeSuiteMethod()[pri:0, instance:tests.CreateProjectTemplateTest@6e0f5f7f]" started-at="2021-12-28T15:35:16 IST" name="beforeSuiteMethod" finished-at="2021-12-28T15:35:16 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteMethod -->
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.CreateProjectTemplateTest@6e0f5f7f]" started-at="2021-12-28T15:35:16 IST" name="beforeClassMethod" finished-at="2021-12-28T15:35:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.CreateProjectTemplateTest@6e0f5f7f]" started-at="2021-12-28T15:35:16 IST" name="beforeMethod" finished-at="2021-12-28T15:35:18 IST" duration-ms="1526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="projectTemplatesCreation()[pri:1, instance:tests.CreateProjectTemplateTest@6e0f5f7f]" started-at="2021-12-28T15:35:18 IST" name="projectTemplatesCreation" finished-at="2021-12-28T15:46:59 IST" duration-ms="701112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- projectTemplatesCreation -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CreateProjectTemplateTest@6e0f5f7f]" started-at="2021-12-28T15:46:59 IST" name="afterMethod" finished-at="2021-12-28T15:47:00 IST" duration-ms="1111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.CreateProjectTemplateTest@6e0f5f7f]" started-at="2021-12-28T15:47:00 IST" name="afterClassMethod" finished-at="2021-12-28T15:47:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.CreateProjectTemplateTest -->
      <class name="tests.FilesTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.FilesTest@31fa1761]" started-at="2021-12-28T16:00:36 IST" name="beforeClassMethod" finished-at="2021-12-28T16:00:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.FilesTest@31fa1761]" started-at="2021-12-28T16:00:36 IST" name="beforeMethod" finished-at="2021-12-28T16:00:37 IST" duration-ms="1151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="filesTestCases()[pri:5, instance:tests.FilesTest@31fa1761]" started-at="2021-12-28T16:00:37 IST" name="filesTestCases" finished-at="2021-12-28T16:07:26 IST" duration-ms="409009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filesTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.FilesTest@31fa1761]" started-at="2021-12-28T16:07:26 IST" name="afterMethod" finished-at="2021-12-28T16:07:27 IST" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.FilesTest@31fa1761]" started-at="2021-12-28T16:07:27 IST" name="afterClassMethod" finished-at="2021-12-28T16:07:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.FilesTest -->
      <class name="tests.CleanUpTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.CleanUpTest@437da279]" started-at="2021-12-28T16:14:05 IST" name="beforeClassMethod" finished-at="2021-12-28T16:14:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.CleanUpTest@437da279]" started-at="2021-12-28T16:14:05 IST" name="beforeMethod" finished-at="2021-12-28T16:14:06 IST" duration-ms="1103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cleanUpTestCases()[pri:100, instance:tests.CleanUpTest@437da279]" started-at="2021-12-28T16:14:06 IST" name="cleanUpTestCases" finished-at="2021-12-28T16:16:15 IST" duration-ms="128837" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#delete_confirm"}
  (Session info: chrome=96.0.4664.110)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'PUSHKARV', ip: '192.168.105.9', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b..., userDataDir: C:\Users\Pushkar\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:51304}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 22bef6debea1b5d098d234b4cbe99115
*** Element info: {Using=id, value=delete_confirm}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#delete_confirm"}
  (Session info: chrome=96.0.4664.110)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'PUSHKARV', ip: '192.168.105.9', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b..., userDataDir: C:\Users\Pushkar\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:51304}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 22bef6debea1b5d098d234b4cbe99115
*** Element info: {Using=id, value=delete_confirm}
at jdk.internal.reflect.GeneratedConstructorAccessor11.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at utils.WebActions.getElement(WebActions.java:19)
at pageEvents.PagesActions.addDeleteText(PagesActions.java:185)
at tests.CleanUpTest.deletePage(CleanUpTest.java:58)
at tests.CleanUpTest.cleanUpTestCases(CleanUpTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUpTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CleanUpTest@437da279]" started-at="2021-12-28T16:16:15 IST" name="afterMethod" finished-at="2021-12-28T16:16:16 IST" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.CleanUpTest@437da279]" started-at="2021-12-28T16:16:16 IST" name="afterClassMethod" finished-at="2021-12-28T16:16:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.CleanUpTest -->
      <class name="tests.PagesTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.PagesTest@1de5f259]" started-at="2021-12-28T15:55:05 IST" name="beforeClassMethod" finished-at="2021-12-28T15:55:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.PagesTest@1de5f259]" started-at="2021-12-28T15:55:05 IST" name="beforeMethod" finished-at="2021-12-28T15:55:06 IST" duration-ms="1137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="pagesTestCases()[pri:6, instance:tests.PagesTest@1de5f259]" started-at="2021-12-28T15:55:06 IST" name="pagesTestCases" finished-at="2021-12-28T16:00:35 IST" duration-ms="328538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pagesTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.PagesTest@1de5f259]" started-at="2021-12-28T16:00:35 IST" name="afterMethod" finished-at="2021-12-28T16:00:36 IST" duration-ms="890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.PagesTest@1de5f259]" started-at="2021-12-28T16:00:36 IST" name="afterClassMethod" finished-at="2021-12-28T16:00:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.PagesTest -->
      <class name="tests.SurveyTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.SurveyTest@550dbc7a]" started-at="2021-12-28T16:11:13 IST" name="beforeClassMethod" finished-at="2021-12-28T16:11:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.SurveyTest@550dbc7a]" started-at="2021-12-28T16:11:13 IST" name="beforeMethod" finished-at="2021-12-28T16:11:14 IST" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="surveyTestCases()[pri:9, instance:tests.SurveyTest@550dbc7a]" started-at="2021-12-28T16:11:14 IST" name="surveyTestCases" finished-at="2021-12-28T16:13:04 IST" duration-ms="109639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- surveyTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.SurveyTest@550dbc7a]" started-at="2021-12-28T16:13:04 IST" name="afterMethod" finished-at="2021-12-28T16:13:05 IST" duration-ms="747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.SurveyTest@550dbc7a]" started-at="2021-12-28T16:13:05 IST" name="afterClassMethod" finished-at="2021-12-28T16:13:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.SurveyTest -->
      <class name="tests.WikiTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.WikiTest@6404f418]" started-at="2021-12-28T15:53:59 IST" name="beforeClassMethod" finished-at="2021-12-28T15:53:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.WikiTest@6404f418]" started-at="2021-12-28T15:53:59 IST" name="beforeMethod" finished-at="2021-12-28T15:54:00 IST" duration-ms="1160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="wikiTestCases()[pri:4, instance:tests.WikiTest@6404f418]" started-at="2021-12-28T15:54:00 IST" name="wikiTestCases" finished-at="2021-12-28T15:55:04 IST" duration-ms="64540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wikiTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.WikiTest@6404f418]" started-at="2021-12-28T15:55:04 IST" name="afterMethod" finished-at="2021-12-28T15:55:05 IST" duration-ms="690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.WikiTest@6404f418]" started-at="2021-12-28T15:55:05 IST" name="afterClassMethod" finished-at="2021-12-28T15:55:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.WikiTest -->
      <class name="tests.TrackerTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.TrackerTest@32502377]" started-at="2021-12-28T16:07:27 IST" name="beforeClassMethod" finished-at="2021-12-28T16:07:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.TrackerTest@32502377]" started-at="2021-12-28T16:07:27 IST" name="beforeMethod" finished-at="2021-12-28T16:07:28 IST" duration-ms="1355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="trackerTestCases()[pri:7, instance:tests.TrackerTest@32502377]" started-at="2021-12-28T16:07:28 IST" name="trackerTestCases" finished-at="2021-12-28T16:11:12 IST" duration-ms="224358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackerTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TrackerTest@32502377]" started-at="2021-12-28T16:11:12 IST" name="afterMethod" finished-at="2021-12-28T16:11:13 IST" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.TrackerTest@32502377]" started-at="2021-12-28T16:11:13 IST" name="afterClassMethod" finished-at="2021-12-28T16:11:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.TrackerTest -->
      <class name="tests.PostsTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.PostsTest@53ce1329]" started-at="2021-12-28T15:52:38 IST" name="beforeClassMethod" finished-at="2021-12-28T15:52:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.PostsTest@53ce1329]" started-at="2021-12-28T15:52:38 IST" name="beforeMethod" finished-at="2021-12-28T15:52:39 IST" duration-ms="1093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="postTestCases()[pri:3, instance:tests.PostsTest@53ce1329]" started-at="2021-12-28T15:52:39 IST" name="postTestCases" finished-at="2021-12-28T15:53:58 IST" duration-ms="79265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.PostsTest@53ce1329]" started-at="2021-12-28T15:53:58 IST" name="afterMethod" finished-at="2021-12-28T15:53:59 IST" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.PostsTest@53ce1329]" started-at="2021-12-28T15:53:59 IST" name="afterClassMethod" finished-at="2021-12-28T15:53:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.PostsTest -->
      <class name="tests.DomainSettingsTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.DomainSettingsTest@36916eb0]" started-at="2021-12-28T16:13:05 IST" name="beforeClassMethod" finished-at="2021-12-28T16:13:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.DomainSettingsTest@36916eb0]" started-at="2021-12-28T16:13:05 IST" name="beforeMethod" finished-at="2021-12-28T16:13:06 IST" duration-ms="1073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="domainSettingTestCases()[pri:8, instance:tests.DomainSettingsTest@36916eb0]" started-at="2021-12-28T16:13:06 IST" name="domainSettingTestCases" finished-at="2021-12-28T16:14:04 IST" duration-ms="58530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- domainSettingTestCases -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.DomainSettingsTest@36916eb0]" started-at="2021-12-28T16:14:04 IST" name="afterMethod" finished-at="2021-12-28T16:14:05 IST" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.DomainSettingsTest@36916eb0]" started-at="2021-12-28T16:14:05 IST" name="afterClassMethod" finished-at="2021-12-28T16:14:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.DomainSettingsTest -->
      <class name="tests.CreateProjectFromTemplateTest">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:tests.CreateProjectFromTemplateTest@4803b726]" started-at="2021-12-28T15:47:00 IST" name="beforeClassMethod" finished-at="2021-12-28T15:47:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:tests.CreateProjectFromTemplateTest@4803b726]" started-at="2021-12-28T15:47:00 IST" name="beforeMethod" finished-at="2021-12-28T15:47:01 IST" duration-ms="1087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createProjectFromTemplates()[pri:2, instance:tests.CreateProjectFromTemplateTest@4803b726]" started-at="2021-12-28T15:47:01 IST" name="createProjectFromTemplates" finished-at="2021-12-28T15:52:37 IST" duration-ms="335586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProjectFromTemplates -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.CreateProjectFromTemplateTest@4803b726]" started-at="2021-12-28T15:52:37 IST" name="afterMethod" finished-at="2021-12-28T15:52:38 IST" duration-ms="752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:tests.CreateProjectFromTemplateTest@4803b726]" started-at="2021-12-28T15:52:38 IST" name="afterClassMethod" finished-at="2021-12-28T15:52:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- tests.CreateProjectFromTemplateTest -->
    </test> <!-- MangoApps -->
  </suite> <!-- Suite -->
</testng-results>
